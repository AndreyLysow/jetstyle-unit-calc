'use client';

import { useEffect, useRef, useState } from 'react';
import s from '../styles/callbackModal.module.scss';

type Props = { onClose: () => void };

const nameRe = /^.{2,}$/;
const contactRe = /^.{5,}$/;

export default function CallbackModal({ onClose }: Props) {
  const [busy, setBusy] = useState(false);
  const [err, setErr] = useState<string | null>(null);
  const [ok, setOk] = useState(false);
  const nameRef = useRef<HTMLInputElement>(null);

  useEffect(() => {
    const onKey = (e: KeyboardEvent) => e.key === 'Escape' && onClose();
    window.addEventListener('keydown', onKey);
    setTimeout(() => nameRef.current?.focus(), 40);
    return () => window.removeEventListener('keydown', onKey);
  }, [onClose]);

  async function onSubmit(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    setErr(null);
    const fd = new FormData(e.currentTarget);
    const name = String(fd.get('name') || '').trim();
    const contact = String(fd.get('contact') || '').trim();
    if (!nameRe.test(name)) return setErr('–£–∫–∞–∂–∏—Ç–µ –∏–º—è (–º–∏–Ω–∏–º—É–º 2 —Å–∏–º–≤–æ–ª–∞).');
    if (!contactRe.test(contact)) return setErr('–£–∫–∞–∂–∏—Ç–µ –∫–æ–Ω—Ç–∞–∫—Ç –¥–ª—è —Å–≤—è–∑–∏.');

    try {
      setBusy(true);
      const res = await fetch('/api/callback', { method: 'POST', body: fd });
      const json = await res.json().catch(() => ({}));
      if (!res.ok || !json?.ok) throw new Error(json?.error || '–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É');
      setOk(true);
      setBusy(false);
      setTimeout(onClose, 1400);
    } catch (e: any) {
      setBusy(false);
      setErr(e?.message ?? '–û—à–∏–±–∫–∞ —Å–µ—Ç–∏');
    }
  }

  return (
    <div className={s.backdrop} onClick={onClose}>
      <div className={s.modal} role="dialog" aria-modal="true" onClick={(e) => e.stopPropagation()}>
        <button className={s.close} aria-label="–ó–∞–∫—Ä—ã—Ç—å" onClick={onClose}>√ó</button>

        <h3 className={s.title}>–ü—Ä–∏–≤–µ—Ç, JetStyle,</h3>
        <p className={s.subtitle}>–Ø –±—ã —Ö–æ—Ç–µ–ª –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å –≤–∞–º–∏ –ø–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–µ.</p>

        <form className={s.form} onSubmit={onSubmit}>
          {/* –ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–≤—É–º—è –∫–æ–ª–æ–Ω–∫–∞–º–∏ */}
          <div className={s.row2}>
            <label className={s.label}>
              –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å*
              <input ref={nameRef} name="name" className={s.input} placeholder="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤" required />
            </label>

            <label className={s.label}>
              Email –∏–ª–∏ —Ç–µ–ª–µ—Ñ–æ–Ω*
              <input name="contact" className={s.input} placeholder="name@company.ru / +7 900 000-00-00" required />
            </label>
          </div>

          <label className={s.label}>
            –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏
            <textarea name="comment" className={`${s.input} ${s.textarea}`} placeholder="–ö–æ—Ä–æ—Ç–∫–æ –æ –∑–∞–¥–∞—á–µ" />
          </label>

          {/* –∫–Ω–æ–ø–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –Ω–∞ –≤—Å—é —à–∏—Ä–∏–Ω—É —Å—Ç—Ä–æ–∫–∏ */}
          <label className={s.fileBtn}>
            <input name="file" type="file" />
            <span className={s.paperclip}>üìé</span>
            –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª
          </label>

          {err && <div className={s.error}>{err}</div>}
          {ok && <div className={s.ok}>–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞, —Å–ø–∞—Å–∏–±–æ!</div>}

          <div className={s.btnRow}>
            <button type="submit" className={s.btnPrimary} disabled={busy}>
              {busy ? '–û—Ç–ø—Ä–∞–≤–ª—è–µ–º‚Ä¶' : '–û—Ç–ø—Ä–∞–≤–∏—Ç—å'}
            </button>

            <a className={s.btnGhost} href="https://t.me/jetstyle" target="_blank" rel="noreferrer">
              –ù–∞–ø–∏—Å–∞—Ç—å –≤ Telegram
              <svg width="18" height="18" viewBox="0 0 24 24" aria-hidden="true">
                <path fill="currentColor"
                  d="M9.6 16.8l.2-3.9 7.2-6.5c.3-.3-.1-.5-.6-.3L7.5 11.5 4.1 10.4c-.8-.3-.8-1.2.1-1.6l15-5.8c.7-.3 1.4.2 1.2 1.3l-2.6 12.1c-.2.8-.7 1-1.4.6l-4-2.9-1.9 1.8c-.2.2-.4.4-.9.4z" />
              </svg>
            </a>
          </div>

          <p className={s.note}>
            –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞{' '}
            <a href="/privacy" target="_blank" rel="noreferrer">–æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</a>
          </p>
        </form>
      </div>
    </div>
  );
}